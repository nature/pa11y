#!/usr/bin/env node
'use strict';

var _ = require('underscore');
var OptionError = require('../lib/error/option-error');
var pkg = require('../package.json');
var program = require('commander');
var pa11y = require('../lib/pa11y');

// Configure command-line app
program
	.version(pkg.version)
	.option(
		'-r, --reporter <name>',
		'specify a reporter to use, one of: console (default), csv, json'
	)
	.option(
		'-s, --standard <name>',
		'specify a standard to use, one of: Section508, WCAG2A, WCAG2AA (default), WCAG2AAA'
	)
	.option(
		'-c, --htmlcs <url>',
		'specify a URL to source HTML_CodeSniffer from. Default: squizlabs.github.io'
	)
	.option(
		'-t, --timeout <ms>',
		'specify the number of milliseconds before a timeout error occurs. Default: 30000'
	)
	.option(
		'-d, --debug',
		'output debug messages'
	)
	.usage('[options] <url>')
	.parse(process.argv);

// Get options
var opts = _.pick(program, ['debug', 'htmlcs', 'reporter', 'standard', 'timeout']);
opts.url = program.args[0];
if (!opts.url || program.args[1]) {
	program.help();
}

// Run pa11y
pa11y.sniff(opts, function (err) {
	if (err instanceof OptionError) {
		program.help();
	}
	process.exit(err ? 1 : 0);
});
